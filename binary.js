const nums = [
  0b10000010,
  0b00000001,
  0b01001101,
  0b01001000,
  0b00000001,
  0b10000010,
  0b00000001,
  0b01101001,
  0b01001000,
  0b00000001,
  0b10000010,
  0b00000001,
  0b01101110,
  0b01001000,
  0b00000001,
  0b10000010,
  0b00000001,
  0b01100101,
  0b01001000,
  0b00000001,
  0b10000010,
  0b00000001,
  0b00100000,
  0b01001000,
  0b00000001,
  0b10000010,
  0b00000001,
  0b01111001,
  0b01001000,
  0b00000001,
  0b10000010,
  0b00000001,
  0b01101111,
  0b01001000,
  0b00000001,
  0b10000010,
  0b00000001,
  0b01110101,
  0b01001000,
  0b00000001,
  0b10000010,
  0b00000001,
  0b01110010,
  0b01001000,
  0b00000001,
  0b10000010,
  0b00000001,
  0b00100000,
  0b01001000,
  0b00000001,
  0b10000010,
  0b00000001,
  0b01100011,
  0b01001000,
  0b00000001,
  0b10000010,
  0b00000001,
  0b01101111,
  0b01001000,
  0b00000001,
  0b10000010,
  0b00000001,
  0b01101001,
  0b01001000,
  0b00000001,
  0b10000010,
  0b00000001,
  0b01101110,
  0b01001000,
  0b00000001,
  0b10000010,
  0b00000001,
  0b00100000,
  0b01001000,
  0b00000001,
  0b10000010,
  0b00000001,
  0b01101001,
  0b01001000,
  0b00000001,
  0b10000010,
  0b00000001,
  0b01101110,
  0b01001000,
  0b00000001,
  0b10000010,
  0b00000001,
  0b00100000,
  0b01001000,
  0b00000001,
  0b10000010,
  0b00000001,
  0b01110010,
  0b01001000,
  0b00000001,
  0b10000010,
  0b00000001,
  0b01101111,
  0b01001000,
  0b00000001,
  0b10000010,
  0b00000001,
  0b01101111,
  0b01001000,
  0b00000001,
  0b10000010,
  0b00000001,
  0b01101101,
  0b01001000,
  0b00000001,
  0b10000010,
  0b00000001,
  0b00100000,
  0b01001000,
  0b00000001,
  0b10000010,
  0b00000001,
  0b00110100,
  0b01001000,
  0b00000001,
  0b10000010,
  0b00000001,
  0b00110100,
  0b01001000,
  0b00000001,
  0b10000010,
  0b00000001,
  0b00110100,
  0b01001000,
  0b00000001,
  0b00000001
];

const converted = nums.map(num => {
  return parseInt(num, 10);
  // Number(num)
});

// console.log(converted);
const base10 = [
  130,
  1,
  77,
  72,
  1,
  130,
  1,
  105,
  72,
  1,
  130,
  1,
  110,
  72,
  1,
  130,
  1,
  101,
  72,
  1,
  130,
  1,
  32,
  72,
  1,
  130,
  1,
  121,
  72,
  1,
  130,
  1,
  111,
  72,
  1,
  130,
  1,
  117,
  72,
  1,
  130,
  1,
  114,
  72,
  1,
  130,
  1,
  32,
  72,
  1,
  130,
  1,
  99,
  72,
  1,
  130,
  1,
  111,
  72,
  1,
  130,
  1,
  105,
  72,
  1,
  130,
  1,
  110,
  72,
  1,
  130,
  1,
  32,
  72,
  1,
  130,
  1,
  105,
  72,
  1,
  130,
  1,
  110,
  72,
  1,
  130,
  1,
  32,
  72,
  1,
  130,
  1,
  114,
  72,
  1,
  130,
  1,
  111,
  72,
  1,
  130,
  1,
  111,
  72,
  1,
  130,
  1,
  109,
  72,
  1,
  130,
  1,
  32,
  72,
  1,
  130,
  1,
  52,
  72,
  1,
  130,
  1,
  52,
  72,
  1,
  130,
  1,
  52,
  72,
  1,
  1
];
